services:
  client:
    build:
      context: ./client
      args:
        - NEXT_PUBLIC_API_URL=https://34.131.4.164
        - NEXT_PUBLIC_SOCKET_URL=https://34.131.4.164
    environment:
      - NEXT_PUBLIC_API_URL=https://34.131.4.164
      - NEXT_PUBLIC_SOCKET_URL=https://34.131.4.164
    depends_on:
      - server
    networks:
      - app-network

  server:
    build: ./server
    environment:
      - PORT=8080
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:yourpassword@db:5432/p2p_video?schema=public
      - JWT_SECRET=f8e7d6c5b4a3210fedcba9876543210f
      - CLIENT_URL=https://34.131.4.164
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=p2p_video
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d p2p_video"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/ssl
    depends_on:
      - client
      - server
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge